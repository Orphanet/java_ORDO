package orph2obo;

import java.util.ArrayList;
import java.util.HashMap;

/**
 * Class representing the information in a RareDisease XML stanza. See the code for the class
 * OrphaXRefXMLParser to get an idea of how objects of this class are constructed. */
public class RareDisease {
    
    /** The name of the disease */
    private String name=null;
    /**Disorder id- the internal id for orphanet*/
    private String orphID = null;
    /** The orphanet ID for this rare disease*/
    private String orphanum=null;
    /** The reference for this rare disease*/
    private String reference=null;
    /** Prevalence class of this disease, a String such as "1-5/10,000"; */
    private String prevalence = null;
    /**AgeofOnset for a disease*/
    private String ageOfOnset = null;
    /**AgeOfDeath for a disease*/
    private String ageOfDeath = null;
    /**Mode of Inheritance*/
    private ArrayList<String> inheritance = null;
   /**Synonym for disease*/
    private ArrayList<String> synonym = null;
    /** each disorder has one expert link for this disease */
    private String expert_link_list=null;
    /** List of genes for this disease */
    private ArrayList<Gene> genelist;
    /** List of externalm references. */
    private ArrayList<ExternalReference> xref_list=null;
    /** Parents (ids) */
    private ArrayList<String> isa_list=null;

    public String get_orphanum() { return this.orphanum; }
    public void setOrphanum(String num) { this.orphanum = num; }
    public void setID (String id) { this.orphID = id; }

    public void addExpertLink(String link) { this.expert_link_list = link; 
    //System.out.println(expert_link_list); 
    }
    

    public void setName(String s) { this.name = s;}
    public String getName() { return this.name; }

   
    
    public void  setReference(String ref) { this.reference = ref; }
    public String getReference() { return this.reference ; }
  
    public void  setPrevalenceClass(String p) { this.prevalence = p; }
    public String getPrevalenceClass() { return this.prevalence ; }
    
    public void setAgeOfOnset (String onset){ this.ageOfOnset = onset;}
    public void setAgeOfDeath (String death) { this.ageOfDeath = death;}
    
    public void setInheritance ( String inherit){
    	this.inheritance.add(inherit);
    	}
    
	
    public void setSynonym (String syn){
		this.synonym.add(syn);
	}

    public void add_genes(ArrayList<Gene> genes) {
	for(Gene g : genes)
	    this.genelist.add(g);
    }

    public void addExternalReference(ExternalReference xr) {
	this. xref_list.add(xr);
    }

    public void add_is_a_link(String parnt) { this.isa_list.add(parnt); }


    public RareDisease() {
	//this.expert_link_list = new ArrayList<String> ();
	this.genelist = new ArrayList<Gene> ();
	this.xref_list = new  ArrayList<ExternalReference> ();
	this.isa_list = new ArrayList<String> ();
	this.inheritance = new ArrayList<String>();
	this.synonym = new ArrayList<String> ();
    }

    
    public String getDXRString(HashMap<String,RareDisease> xrefs) {
	StringBuilder sb = new StringBuilder();
	sb.append("\n[Term]\n");
	sb.append("id: OrphaNum:" +  this.orphanum +  "\n");
	sb.append("name:" + this.name + "\n");
	sb.append("comment: Orphanet ID- " + this.orphID + "\n");
	sb.append("comment: prevalence- " + this.prevalence + ";" + " AgeOfOnset- "+ this.ageOfOnset + ";"+ " AgeOfDeath-" + this.ageOfDeath + ";");
	if (! this.inheritance.isEmpty()){
		for (int i= 0; i< this.inheritance.size(); i++){
		sb.append(" Inheritance- "+ this.inheritance.get(i) + ";");}
	}
	/**the problem with the expert is link due to the fault in the XML file. Need to use amp not the symbol*/
	sb.append(" \ncomment: Expert Link -http://www.orpha.net/consor/cgi-bin/OC_Exp.php?lng=en&" + this.expert_link_list + "\n");
	Gene gen = new Gene();
	String gene = gen.toString();
	sb.append(gene);
	if (! this.synonym.isEmpty()){
	for( int i=0; i< this.synonym.size(); i++){
	sb.append("synonym: "+ this.synonym.get(i) + "\n");}}
	ExternalReference exref = new ExternalReference();
	String string = exref.toString();
	sb.append(string);
	return sb.toString();

    }


}